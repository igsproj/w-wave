/*
Simple flex grid. Grid doesn't use margins or paddings at all ! Instead, it uses css row/column gaps as gutters.
There are default 4 grids here. They are fully independed. Change number of columns or gutters for any grid (1,2,3,4 ...) when you wish (usually on breakpoints)
You can add as many grids as you need. Just copy/paste grid code)
*/

.grid-row-auto {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.grid-row-fixed {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

.grid-col-auto {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}

.grid-col-fixed {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}

/******************************************************************
grid 1
******************************************************************/

:root {
  --gr1-grid-columns: 1;     /* you can change it any time on breakpoints */
  --gr1-grid-row-gap: 30px;  /* you can change it any time on breakpoints */
  --gr1-grid-col-gap: 30px;  /* you can change it any time on breakpoints */

  /* default cell size: 1 cell = 1 column */
  /* variant 1 */
  --gr1-cell-width-1: calc((100% - calc(var(--gr1-grid-columns) - 1) * var(--gr1-grid-row-gap)) / var(--gr1-grid-columns));
  /* variant 2 - looks more complecated. But get same formula .. */
  /* --gr1-grid-shift: calc((var(--gr1-grid-columns) - 1) * var(--gr1-grid-row-gap) / var(--gr1-grid-columns) + 0px) ;
  --gr1-cell-width-1: calc( (100% / var(--gr1-grid-columns)) - var(--gr1-grid-shift)); */

  /* default grid step 0.25 */
  --gr1-cell-width-0d25: calc(0.25 * var(--gr1-cell-width-1) + (0.25 - 1) * var(--gr1-grid-row-gap));
}

/* init grid gutters */
.gr1-grid {
  row-gap: var(--gr1-grid-row-gap);
  column-gap: var(--gr1-grid-col-gap);
}

/* takes all space (same as --gr1-grid-columns = 1) */
.gr1-cell-full {
  flex-basis: 100%
}

.gr1-cell-auto {
  flex-basis: auto;
}

/* default size : 1 cell = 1 column */
.gr1-cell {
  flex-basis: var(--gr1-cell-width-1);
  max-width: var(--gr1-cell-width-1);
}

/******************************************************************
grid 2
******************************************************************/

:root {
  --gr2-grid-columns: 1;     /* you can change it any time on breakpoints */
  --gr2-grid-row-gap: 30px;  /* you can change it any time on breakpoints */
  --gr2-grid-col-gap: 30px;  /* you can change it any time on breakpoints */

  /* default cell size: 1 cell = 1 column */
  /* variant 1 */
  --gr2-cell-width-1: calc((100% - calc(var(--gr2-grid-columns) - 1) * var(--gr2-grid-row-gap)) / var(--gr2-grid-columns));
  /* variant 2 - looks more complecated. But get same formula .. */
  /* --gr2-grid-shift: calc((var(--gr2-grid-columns) - 1) * var(--gr2-grid-row-gap) / var(--gr2-grid-columns) + 0px) ;
  --gr2-cell-width-1: calc( (100% / var(--gr2-grid-columns)) - var(--gr2-grid-shift)); */

  /* default grid step 0.25 */
  --gr2-cell-width-0d25: calc(0.25 * var(--gr2-cell-width-1) + (0.25 - 1) * var(--gr2-grid-row-gap));
}

/* init grid gutters */
.gr2-grid {
  row-gap: var(--gr2-grid-row-gap);
  column-gap: var(--gr2-grid-col-gap);
}

/* takes all space (same as --gr2-grid-columns = 1) */
.gr2-cell-full {
  flex-basis: 100%
}

.gr2-cell-auto {
  flex-basis: auto;
}

/* default size : 1 cell = 1 column */
.gr2-cell {
  flex-basis: var(--gr2-cell-width-1);
  max-width: var(--gr2-cell-width-1);
}

/******************************************************************
grid 3
******************************************************************/

:root {
  --gr3-grid-columns: 1;     /* you can change it any time on breakpoints */
  --gr3-grid-row-gap: 30px;  /* you can change it any time on breakpoints */
  --gr3-grid-col-gap: 30px;  /* you can change it any time on breakpoints */

  /* --gr3-borders: 0px; */
  /* default cell size: 1 cell = 1 column */
  /* variant 1 */
  --gr3-cell-width-1: calc((100% - calc(var(--gr3-grid-columns) - 1) * var(--gr3-grid-row-gap)) / var(--gr3-grid-columns));
  /* variant 2 - looks more complecated. But get same formula .. */
  /* --gr3-grid-shift: calc((var(--gr3-grid-columns) - 1) * var(--gr3-grid-row-gap) / var(--gr3-grid-columns)) ;
  --gr3-cell-width-1: calc( (100% / var(--gr3-grid-columns)) - var(--gr3-grid-shift)  ); */

  /* default grid step 0.25 */
  --gr3-cell-width-0d25: calc(0.25 * var(--gr3-cell-width-1) + (0.25 - 1) * var(--gr3-grid-row-gap));
}

/* init grid gutters */
.gr3-grid {
  row-gap: var(--gr3-grid-row-gap);
  column-gap: var(--gr3-grid-col-gap);
}

/* takes all space (same as --gr3-grid-columns = 1) */
.gr3-cell-full {
  flex-basis: 100%
}

.gr3-cell-auto {
  flex-basis: auto;
}

/* default size : 1 cell = 1 column */
.gr3-cell {
  flex-basis: var(--gr3-cell-width-1);
  max-width: var(--gr3-cell-width-1);
}

/******************************************************************
grid 4
******************************************************************/

:root {
  --gr4-grid-columns: 1;     /* you can change it any time on breakpoints */
  --gr4-grid-row-gap: 30px;  /* you can change it any time on breakpoints */
  --gr4-grid-col-gap: 30px;  /* you can change it any time on breakpoints */

  /* default cell size: 1 cell = 1 column */
  /* variant 1 */
  --gr4-cell-width-1: calc((100% - calc(var(--gr4-grid-columns) - 1) * var(--gr4-grid-row-gap)) / var(--gr4-grid-columns));
  /* variant 2 - looks more complecated. But get same formula .. */
  /* --gr4-grid-shift: calc((var(--gr4-grid-columns) - 1) * var(--gr4-grid-row-gap) / var(--gr4-grid-columns) + 0px) ;
  --gr4-cell-width-1: calc( (100% / var(--gr4-grid-columns)) - var(--gr4-grid-shift)); */

  /* default grid step 0.25 */
  --gr4-cell-width-0d25: calc(0.25 * var(--gr4-cell-width-1) + (0.25 - 1) * var(--gr4-grid-row-gap));
}

/* init grid gutters */
.gr4-grid {
  row-gap: var(--gr4-grid-row-gap);
  column-gap: var(--gr4-grid-col-gap);
}

/* takes all space (same as --gr4-grid-columns = 1) */
.gr4-cell-full {
  flex-basis: 100%
}

.gr4-cell-auto {
  flex-basis: auto;
}

/* default size : 1 cell = 1 column */
.gr4-cell {
  flex-basis: var(--gr4-cell-width-1);
  max-width: var(--gr4-cell-width-1);
}
